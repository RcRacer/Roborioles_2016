// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "ShootCmd.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

ShootCmd::ShootCmd(): Command() {
        // Use requires() here to declare subsystem dependencies
    // eg. requires(chassis);
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::shooter.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void ShootCmd::Initialize() {
	Robot::shooter->PrintValues();
}

// Called repeatedly when this Command is scheduled to run
void ShootCmd::Execute() {
	Robot::shooter->PrintValues();

		//High Goal - Button X
		if(Robot::oi->getGamepad()->GetRawButton(1)){
			Robot::shooter->SetSpeed(275);   //295
			/*do{
				Robot::shooter->PrintValues();
				Wait(.1);
			}while (Robot::shooter->GetMotorVel()<450);
			*/
			Robot::shooter->PrintValues();
			Wait(2.5);  //1.25
			Robot::shooter->PrintValues();
			Robot::shooter->SetSolen(true);
			Wait(.5);
			Robot::shooter->PrintValues();
			Robot::shooter->SetSolen(false);
			Robot::shooter->PrintValues();
			Robot::shooter->SetDownSpeed(0);

		}
		//Solenoid - Right Bumper
		if(Robot::oi->getGamepad()->GetRawButton(6) && !Robot::shooter->GetShooterSolenoid()->Get())
		{
			Wait(.5);
			Robot::shooter->SetSolen(true);
		}
		else if (Robot::oi->getGamepad()->GetRawButton(6) && Robot::shooter->GetShooterSolenoid()->Get())
		{
			Wait(.5);
			Robot::shooter->SetSolen(false);
		}



		//LowGoal - Button Y
		if (Robot::oi->getGamepad()->GetRawButton(4)) {
			Robot::shooter->SetSpeed(175);   //150
			/*do{
				Robot::shooter->PrintValues();
				Wait(.1);
			}while (Robot::shooter->GetMotorVel()<450);
			 */
			Wait(1.5);    //1
			Robot::shooter->PrintValues();
			Robot::shooter->SetSolen(true);
			Wait(.5);
			Robot::shooter->PrintValues();
			Robot::shooter->SetSolen(false);
			Robot::shooter->PrintValues();
			Robot::shooter->SetSpeed(0);
		}
}

// Make this return true when this Command no longer needs to run execute()
bool ShootCmd::IsFinished() {
    return false;
}

// Called once after isFinished returns true
void ShootCmd::End() {

}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void ShootCmd::Interrupted() {

}

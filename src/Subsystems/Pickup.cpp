// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.




#include "Pickup.h"
#include "../RobotMap.h"
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "../Commands/PickyUppy.h"
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

Pickup::Pickup() : Subsystem("Pickup") {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    thePickupMotor = RobotMap::pickupThePickupMotor;
    thePickuppySolenoid = RobotMap::pickupSolenoid;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
}

void Pickup::InitDefaultCommand() {
    // Set the default command for a subsystem here.
    // SetDefaultCommand(new MySpecialCommand());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        SetDefaultCommand(new PickyUppy());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
}

void Pickup::StartMotor(){
	thePickupMotor->Set(.75);
}
void Pickup::EndMotor(){
	thePickupMotor->Set(0);
}
void Pickup::ReverseMotor(){
	thePickupMotor->Set(-.75);
}
void Pickup::Raise(){
	thePickuppySolenoid->Set(true);
}
void Pickup::Lower(){
	thePickuppySolenoid->Set(false);
}
void Pickup::MoveMotor(double speed){
	thePickupMotor->Set(speed);
}


// Put methods for controlling this subsystem
// here. Call these from Commands.

